# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Dec 25 20:55:50 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
